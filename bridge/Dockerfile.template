# base-image for python on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/
#FROM balenalib/%%BALENA_MACHINE_NAME%%-debian-python:3-run
FROM balenalib/%%BALENA_MACHINE_NAME%%-alpine-golang:1.19-build

# use `install_packages` if you need to install dependencies,
# for instance if you need git, just uncomment the line below.
#RUN install_packages libglib2.0-dev build-essential bluez

# Set our working directory
WORKDIR /usr/src/bridge

# This will copy all files in our root to the working  directory in the container
COPY . ./

# Copy requirements.txt first for better cache on later pushes
# COPY requirements.txt requirements.txt

# pip install python deps from requirements.txt on the resin.io build server
#RUN pip install -r requirements.txt
#RUN sudo pip install bluepy
RUN go build -o bridge

# TODO multi-stage build
FROM balenalib/%%BALENA_MACHINE_NAME%%-alpine:3.16-run

RUN apk --no-cache add ca-certificates

WORKDIR /usr/src/bridge

COPY --from=0 /usr/src/bridge/bridge .

# main.py will run when container starts up on the device
CMD ["./bridge"]